{"version":3,"sources":["webpack:///./src/components/card/cardImage.js","webpack:///./src/components/card/cardHeader.js","webpack:///./src/components/card/cardLinks.js","webpack:///./src/components/card/cardText.js","webpack:///./src/components/card/projectCard.js","webpack:///./src/pages/portfolio.js","webpack:///./data/SiteConfig.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["CardImage","props","className","href","link","aria-label","data","name","src","media","alt","style","c","width","height","CardHeader","title","techs","map","t","key","Math","random","pic_url","CardLinks","fontSize","h","date","git","web","left","CardText","text","substring","ProjectCard","render","p","this","project","media_pre","fields","slug","git_link","web_link","story","React","Component","Portfolio","calculateCardHeight","d","getClientDimensions","showProjects","sort","a","b","Date","node","getFullYear","state","wHeight","client","over","componentDidMount","window","onresize","setState","Helmet","meta","content","lang","query","allDataJson","edges","config","siteTitle","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","fixedFooter","siteDescription","siteRss","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","palette","mainBg","accent","primary","brandText","brand","secondary","replace","substr","slice","module","exports","createHTML","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","NAME","exec","O","P","F","test","toLowerCase","split","length"],"mappings":"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","file":"component---src-pages-portfolio-js-3b9ef26b831591150d87.js","sourcesContent":["import React from \"react\"\nimport \"../styles/card.scss\"\n\nexport const CardImage = props => {\n\n  const calculateStyle = () => {\n    if(props.data.c.width && props.data.c.height) {\n      return props.data.c.width > props.data.c.height ? {width: '100%'} : {height: '100%'}\n    }\n    return {width: '60%'}\n  }\n\n  return <div className='card_image'>\n    <a href={props.link} aria-label={\"Read the whole story about \" + props.data.name}>\n      <img src={props.data.media} alt={props.data.name + \" screen-shot\"}\n           style={calculateStyle()}/>\n    </a>\n  </div>\n}\n\n","import React from \"react\"\nimport \"../styles/card.scss\"\n\nexport const CardHeader = props =>\n  <div className='card_header'>\n    <div className='card_title'> {props.data.title} </div>\n    <div className='card_techs'>\n      {\n        props.data.techs && props.data.techs.map(t => {\n          return (\n            <div className='single_tech' key={Math.random()}>\n              <img className='single_tech_img' src={t.pic_url} alt={t.name} title={t.name} />\n            </div>\n          )\n        })\n      }\n    </div>\n    <div className='card_border'>\n\n    </div>\n  </div>\n\n","import React from \"react\"\nimport \"../styles/card.scss\"\nimport config from \"../../../data/SiteConfig\"\n\nexport const CardLinks = props =>\n  <div className='card_links' style={{ fontSize: props.data.h / 18 }}>\n    <div className='card_date'>\n      {props.data.date}\n    </div>\n    {props.data.git ? <a href={props.data.git}\n                          aria-label='View the code on github'>\n      <div className='git_link'> GIT</div>\n    </a> : null}\n    {props.data.web ? <a href={props.data.web}\n                         aria-label='visit the website'>\n      <div className='web_link'\n           style={{ left: props.data.git ? \"66%\" : \"33%\" }}\n      > WEB\n      </div>\n    </a> : null}\n  </div>\n\n\n","import React from \"react\"\nimport \"../styles/card.scss\"\n\nexport const CardText = props =>\n  <div className='card_text' style={{fontSize: props.data.h / 18}}>\n    {props.data.text && props.data.text.substring(0, 40) + ' ... '}\n    <a href={props.link} aria-label='read the whole story '> <span className='read_more'> -> </span> </a>\n  </div>\n\n","import React from \"react\"\nimport { CardImage } from \"./cardImage\"\nimport { CardHeader } from \"./cardHeader\"\nimport { CardLinks } from \"./cardLinks\"\nimport { CardText } from \"./cardText\"\nimport \"../styles/card.scss\"\n\nexport default class ProjectCard extends React.Component {\n  render() {\n    let p = this.props.project\n    return (\n      <div className='col-sm-6 card__' style={{\n        height: this.props.h,\n      }}>\n        <div className='card_body'>\n          <CardImage data={{ media: p.media_pre, name: p.name, h: this.props.h, c: this.props.c }}\n                     link={p.fields.slug}/>\n          <CardHeader data={{ title: p.name, techs: p.techs }}/>\n          <CardLinks data={{ date: p.date, git: p.git_link, web: p.web_link, h: this.props.h }}/>\n          <CardText data={{ text: p.story, h: this.props.h }} link={p.fields.slug}/>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport { getClientDimensions } from \"../utils/helpers\"\nimport Footer from \"../components/footer\"\nimport ProjectCard from \"../components/card/projectCard\"\nimport Layout from \"./layout\"\n\nexport default class Portfolio extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { wHeight: 0, client: {}, over: -1 }\n  }\n\n  componentDidMount() {\n    window.onresize = () => {\n      this.setState({ wHeight: this.calculateCardHeight(), client: getClientDimensions() })\n    }\n    this.setState({ wHeight: this.calculateCardHeight(), client: getClientDimensions() })\n  }\n\n  calculateCardHeight = () => {\n    let d = getClientDimensions()\n    if (d.width > d.height) { // desktop or landscape\n      if (d.height < 500) return d.height - 100\n      return (d.height - 100) / 2.2\n    }\n    return d.height / 3\n  }\n\n\n\n  showProjects = (data) => {\n    return data.sort((a, b) => {return new Date(b.node.date).getFullYear() - new Date(a.node.date).getFullYear()}).map(node => {\n      return <ProjectCard project={node.node} key={Math.random()} h={this.state.wHeight} c={this.state.client}/>\n    })\n  }\n\n  render() {\n    return (\n    <Layout>\n      <div className='portfolio_container container-fluid'>\n        <Helmet title={\"portfolio\"} meta={[\n          { name: \"description\", content: \"A list of projects built by Catalin\" },\n          { name: \"keywords\", content: \"projects, portfolio, Javascript, React\" },\n        ]}>\n          <html lang=\"en\"/>\n        </Helmet>\n        <main className='row'>\n          <StaticQuery\n            query={graphql`\n              query {\n                allDataJson {\n                edges {\n                  node {\n                    fields {\n                      slug\n                    }\n                    id,\n                    date,\n                    description,\n                    git_link,\n                    name,\n                    story,\n                    web_link,\n                    media,\n                    media_pre,\n                    techs {\n                        id,\n                        description,\n                        name,\n                        pic_url,\n                        tech_type,\n                        url\n                    }\n                  }\n                }\n                totalCount\n              }\n            }\n          `}\n            render={data => this.showProjects(data.allDataJson.edges)}\n          />\n          <Footer/>\n        </main>\n      </div>\n    </Layout>\n    )\n  }\n}\n\n/**\n {data.allDataJson.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.fields.slug}>\n              <h3>\n                {node.name}{\" \"}\n                <span>\n                  — {node.date}\n                </span>\n              </h3>\n            </Link>\n          </div>\n        ))}\n **/\n","const config = {\n  siteTitle: \"Catalin's page\", // Site title.\n  siteTitleShort: \"Catalin\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Catalin's portfolio and blog\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://ucshadow.gthub.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/page\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-material-starter/.\n  fixedFooter: false, // Whether the footer component is fixed, i.e. always visible\n  siteDescription: \"A website build to present the work of Catalin, a software engineer\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  // siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  // siteGATrackingID: \"UA-47311644-4\", // Tracking code ID for google analytics.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-material-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Software\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Catalin\", // Username to display in the author segment.\n  userEmail: \"ucshadow@gmail.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Horsens, Denmark\", // User location to display in the author segment.\n  userAvatar: \"/static/me3.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"I am a guy\",\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/ucshadow\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"LinkedIn\",\n      url: \"https://www.linkedin.com/in/catalin-udrea/\",\n      iconClassName: \"fa fa-linkedin\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:ucshadow@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2019. Catalin Udrea\", // Copyright string for the footer of the website and RSS feed.\n  palette: {mainBg: '#101010', accent: '#42425b', primary: '#bb86fc', brandText: '#ff7597', brand: '#ff0266',\n    secondary: '#03edd7'}\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}